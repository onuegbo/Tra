"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 1.11.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import mimetypes
import ast


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '3ij)ff6c&y1d#ign2-h_h8=y#9#c@ltk62aq5i52i*y#4h1&7i'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
     # Django modules
    
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.postgres',
    'django.contrib.sites',
    'django.forms',

    # Local apps
    'account.apps.AccountsConfig',
    #'gogaga.apps.GogagaConfig',
    'etrans.apps.EtransConfig',
    'cart.apps.CartConfig',
    'shipping.apps.ShippingConfig',
    'orders.apps.OrdersConfig',
    'paypal.standard.ipn',
    'payment.apps.PaymentConfig',
    'discount.apps.DiscountConfig',
    'core.apps.CoreConfig',
    'rest_framework',
    


    # External apps
    'mptt',
    'bootstrap4',
    'widget_tweaks',
    'pwa',
    'django_fsm',
    'django_babel',
    'django_prices',
    'django_prices_openexchangerates',
    'django_countries',
    'django_mysql',
    'versatileimagefield',
    'django_filters',
    'webpack_loader',
]




MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django_babel.middleware.LocaleMiddleware',
    'core.middleware.discounts',
    'core.middleware.currency',
    # 'core.middleware.google_analytics',
    # 'core.middleware.country',
    # 'core.middleware.site',
      
]


REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10
}



ROOT_URLCONF = 'mysite.urls'


# loaders = [
#     'django.template.loaders.filesystem.Loader',
#     'django.template.loaders.app_directories.Loader']

# if not DEBUG:
#     loaders = [('django.template.loaders.cached.Loader', loaders)]
    

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
                'cart.context_processors.cart',     
            ],
            
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'etrans',
        'USER' : 'amaobi',
        'PASSWORD': 'mojay111',
        'HOST' : 'localhost',
        'PORT': '5432',
         
        
    }
}

    

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Africa/Libreville'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/' #URL to use when referring to static files located in STATIC_ROOT
MEDIA_ROOT = os.path.join(BASE_DIR, "media") 
MEDIA_URL = '/media/'
STATIC_ROOT = os.path.join(BASE_DIR, "static") #The absolute path to the directory where collectstatic will collect static files for deployment.

STATICFILES_DIRS =( 
    os.path.join(BASE_DIR, "static", "images"),
    os.path.join(BASE_DIR, "static", "assets"),
    os.path.join(BASE_DIR, "static", "dashboard"),
)

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder'
    ]



PWA_SERVICE_WORKER_PATH = os.path.join(BASE_DIR, 'etrans', 'serviceworker.js')





mimetypes.add_type("text/css", ".css", True)

SITE_ID = 1

LOGIN_URL = '/etrans/login/'
LOGIN_REDIRECT_URL = '/core/'
LOGOUT_REDIRECT_URL = '/etrans/'
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

LOW_STOCK_THRESHOLD = 10
MAX_CART_LINE_QUANTITY = int(os.environ.get('MAX_CART_LINE_QUANTITY', 50))

OPENEXCHANGERATES_API_KEY = os.environ.get('OPENEXCHANGERATES_API_KEY')

PAGINATE_BY = 16
DASHBOARD_PAGINATE_BY = 30
DASHBOARD_SEARCH_LIMIT = 5

DEFAULT_CURRENCY = 'FCFA'
DEFAULT_COUNTRY = 'GAB'
AVAILABLE_CURRENCIES = [DEFAULT_CURRENCY]

ENABLE_SSL = ast.literal_eval(
    os.environ.get('ENABLE_SSL', 'False'))

CART_SESSION_ID = 'cart'
CELERY_BROKER_URL = 'amqp://localhost'
PAYPAL_RECEIVER_EMAIL = 'oliveramaobi2017-facilitator@gmail.com'
PAYPAL_TEST = True


# FORM_RENDERER = 'django.forms.renderers.TemplatesSetting'

bootstrap4 = {
    'set_placeholder': False,
    'set_required': False,
    'success_css_class': '',
    'form_renderers': {
        'default': 'core.utils.form_renderer.FormRenderer'}
    }



VERSATILEIMAGEFIELD_RENDITION_KEY_SETS = {
    'defaults': [
        ('product_gallery', 'crop__540x540'),
        ('product_gallery_2x', 'crop__1080x1080'),
        ('product_small', 'crop__60x60'),
        ('product_small_2x', 'crop__120x120'),
        ('product_list', 'crop__255x255'),
        ('product_list_2x', 'crop__510x510')]}

VERSATILEIMAGEFIELD_SETTINGS = {
    # Images should be pre-generated on Production environment
    'create_images_on_demand': ast.literal_eval(
        os.environ.get('CREATE_IMAGES_ON_DEMAND', 'True')),
}


PLACEHOLDER_IMAGES = {
    60: 'images/placeholder60x60.png',
    120: 'images/placeholder120x120.png',
    255: 'images/placeholder255x255.png',
    540: 'images/placeholder540x540.png',
    1080: 'images/placeholder1080x1080.png'
}

DEFAULT_PLACEHOLDER = 'images/placeholder255x255.png'

WEBPACK_LOADER = {
    'DEFAULT': {
        'CACHE': not DEBUG,
        'BUNDLE_DIR_NAME': 'assets/',
        'STATS_FILE': os.path.join(BASE_DIR, 'webpack-bundle.json'),
        'POLL_INTERVAL': 0.1,
        'IGNORE': [
            r'.+\.hot-update\.js',
            r'.+\.map']}}


# PWA_APP_NAME = 'Etrans'
# PWA_APP_DESCRIPTION = "Get a bus ticket from the comfort of your home"
# PWA_APP_THEME_COLOR = '#0A0302'
# PWA_APP_ICONS = [
#     {
#         'src': '/static/images/my_app_icon.png',
#         'sizes': '160x160'
#     }
# ]