# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2018-02-09 00:35
from __future__ import unicode_literals

from decimal import Decimal
from django.conf import settings
import django.contrib.postgres.fields.hstore
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_prices.models
import satchless.item
import versatileimagefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AttributeChoiceValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField()),
                ('color', models.CharField(blank=True, max_length=7, validators=[django.core.validators.RegexValidator('^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')])),
            ],
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('slug', models.SlugField()),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('location', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, max_length=100)),
                ('numero_telephone', models.IntegerField(default=0)),
                ('slug', models.SlugField(unique=True)),
                ('is_hidden', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'company',
                'permissions': (('view_category', 'Can view categories'), ('edit_category', 'Can edit categories')),
                'ordering': ['name'],
                'verbose_name': 'company',
                'verbose_name_plural': 'Companies',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('departure_time', models.DateTimeField()),
                ('description', models.TextField()),
                ('departure', models.CharField(max_length=100)),
                ('arrival', models.CharField(max_length=100)),
                ('price', django_prices.models.PriceField(currency='FCFA', decimal_places=2, max_digits=12)),
                ('available_on', models.DateField(blank=True, null=True)),
                ('is_published', models.BooleanField(default=True)),
                ('attributes', django.contrib.postgres.fields.hstore.HStoreField()),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='etrans.Company')),
            ],
            options={
                'db_table': 'product',
                'permissions': (('view_product', 'Can view products'), ('edit_product', 'Can edit products'), ('view_properties', 'Can view product properties'), ('edit_properties', 'Can edit product properties')),
            },
            bases=(models.Model, satchless.item.ItemRange),
        ),
        migrations.CreateModel(
            name='ProductAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ('slug',),
                'db_table': 'productattribute',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', versatileimagefield.fields.VersatileImageField(upload_to='products')),
                ('ppoi', versatileimagefield.fields.PPOIField(default='0.5x0.5', editable=False, max_length=20)),
                ('alt', models.CharField(blank=True, max_length=128)),
                ('order', models.PositiveIntegerField(editable=False)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='etrans.Product')),
            ],
            options={
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('has_variants', models.BooleanField(default=True)),
                ('is_shipping_required', models.BooleanField(default=False)),
                ('product_attributes', models.ManyToManyField(blank=True, related_name='products_types', to='etrans.ProductAttribute')),
                ('variant_attributes', models.ManyToManyField(blank=True, related_name='product_variants_types', to='etrans.ProductAttribute')),
            ],
        ),
        migrations.CreateModel(
            name='ProductVariant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(max_length=32, unique=True)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('bus_type', models.CharField(choices=[('C', 'Climatisee'), ('NC', 'Non climatisee')], default='C', help_text='Bus climatisee', max_length=2)),
                ('price_override', django_prices.models.PriceField(blank=True, currency='FCFA', decimal_places=2, max_digits=12, null=True)),
                ('attributes', django.contrib.postgres.fields.hstore.HStoreField()),
            ],
            options={
                'db_table': 'productvariant',
            },
            bases=(models.Model, satchless.item.Item),
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], default='M', max_length=1)),
                ('bio', models.TextField(blank=True, max_length=1024, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=Decimal('1'), validators=[django.core.validators.MinValueValidator(0)])),
                ('quantity_allocated', models.IntegerField(default=Decimal('0'), validators=[django.core.validators.MinValueValidator(0)])),
                ('cost_price', django_prices.models.PriceField(blank=True, currency='FCFA', decimal_places=2, max_digits=12, null=True)),
            ],
            options={
                'db_table': 'stock',
            },
        ),
        migrations.CreateModel(
            name='StockLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'permissions': (('view_stock_location', 'Can view stock location'), ('edit_stock_location', 'Can edit stock location')),
            },
        ),
        migrations.CreateModel(
            name='VariantImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variant_images', to='etrans.ProductImage')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variant_images', to='etrans.ProductVariant')),
            ],
        ),
        migrations.AddField(
            model_name='stock',
            name='location',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='etrans.StockLocation'),
        ),
        migrations.AddField(
            model_name='stock',
            name='variant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock', to='etrans.ProductVariant'),
        ),
        migrations.AddField(
            model_name='productvariant',
            name='images',
            field=models.ManyToManyField(through='etrans.VariantImage', to='etrans.ProductImage'),
        ),
        migrations.AddField(
            model_name='productvariant',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='etrans.Product'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='products', to='etrans.ProductType'),
        ),
        migrations.AddField(
            model_name='collection',
            name='products',
            field=models.ManyToManyField(blank=True, related_name='collections', to='etrans.Product'),
        ),
        migrations.AddField(
            model_name='attributechoicevalue',
            name='attribute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='etrans.ProductAttribute'),
        ),
        migrations.AlterUniqueTogether(
            name='stock',
            unique_together=set([('variant', 'location')]),
        ),
        migrations.AlterUniqueTogether(
            name='attributechoicevalue',
            unique_together=set([('name', 'attribute')]),
        ),
    ]
